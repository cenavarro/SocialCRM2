br
center
  h1 Editando Entrada Datos Facebook 
br
br

= form_for @facebook_datum, :html => {:class => "formEntradaDatos", :id => "formEntradaDatos"} do |f|
  -if @facebook_datum.errors.any?
    #error_explanation
      h2 = "#{pluralize(@facebook_datum.errors.count, "error")} prohibited this facebook_datum from being saved:"
      ul
        - @facebook_datum.errors.full_messages.each do |msg|
          li= msg
  .form-horizontal.sectionInformation style="height:1150px;"
    .box.informacion
      = f.hidden_field :client_id, :value => params[:idc]
      - start_date = !@facebook_datum.nil? ? @facebook_datum.start_date.strftime("%d-%m-%Y") : start_date = get_start_date 
      = f.label t 'global.start_date'
      .input-append.date data-date=start_date data-date-format="dd-mm-yyyy" id="start_date_picker"
        = f.text_field :start_date, :class => "span2", :value => start_date, :readonly => true
        span.add-on
          i.icon-th
      br
      br
      - end_date = !@facebook_datum.nil? ? @facebook_datum.end_date.strftime("%d-%m-%Y") : end_date = get_end_date
      = f.label t 'global.end_date'
      .input-append.date data-date=end_date data-date-format="dd-mm-yyyy" id="end_date_picker"
        = f.text_field :end_date, :class => "span2", :value => end_date, :readonly => true
        span.add-on
          i.icon-th
      br
      br
      = f.label t 'facebook.actions_title'
      = f.text_field :actions
      br
      br
      | Extraer datos desde Facebook
      br
      br
      button.btn.btn-primary type="button" onclick="javascript:connectFacebook(#{params[:idc]},#{SOCIAL_NETWORKS_CONFIG['facebook']['client_id']},#{params[:locale]});"
        = t 'buttons.connect'
    .box.fans
      = t 'global.fans_title'
      br
      br
      = f.label t 'facebook.total_fans'
      = f.text_field :total_fans, :class => "number validate[required]", :value => number_with_delimiter(f.object.total_fans, integer_format)
      br
      br
      = f.label t 'facebook.goal_fans'
      = f.text_field :goal_fans, :class => "number validate[required]", :value => number_with_delimiter(f.object.goal_fans, integer_format)
      br
      br
      = f.label t 'facebook.spain_ranking'
      = f.text_field :ranking_espana, :class => "number validate[required]", :value => number_with_delimiter(f.object.ranking_espana, integer_format)
      br
      br
      = f.label t 'facebook.world_ranking'
      = f.text_field :ranking_world, :class => "number validate[required]", :value => number_with_delimiter(f.object.ranking_world, integer_format)
    .box.interaction
      = t 'facebook.interactions'
      br
      br
      = f.label t 'facebook.prints'
      = f.text_field :prints, :class => "number validate[required]", :value => number_with_delimiter(f.object.prints, integer_format)
      br
      br
      = f.label t 'facebook.interactions'
      = f.text_field :total_interactions, :class => "number validate[required]", :value => number_with_delimiter(f.object.total_interactions, integer_format)
      br
      br
      = f.label t 'facebook.total_reach'
      = f.text_field :total_reach, :class => "number validate[required]", :value => number_with_delimiter(f.object.total_reach, integer_format)
      br
      br
      = f.label t 'facebook.potential_reach'
      = f.text_field :potential_reach, :class => "number validate[required]", :value => number_with_delimiter(f.object.potential_reach, integer_format)
      br
      br
      = f.label t 'facebook.ads_prints'
      = f.text_field :total_prints_per_anno, :class => "number validate[required]", :value => number_with_delimiter(f.object.total_prints_per_anno, integer_format)
      br
      br
      = f.label t 'facebook.ads_clics'
      = f.text_field :total_clicks_anno, :class => "number validate[required]", :value => number_with_delimiter(f.object.total_clicks_anno, integer_format)
      br
      br
      = f.label t 'facebook.fans_through_ads'
      = f.text_field :fans_through_anno, :class => "number validate[required]", :value => number_with_delimiter(f.object.fans_through_anno, integer_format)
    .box.inversion
      = t 'global.investment_title'
      br
      br
      = f.label t 'global.agency_investment'
      = f.text_field :agency_investment, :class => "decimal validate[required]", :value => number_with_precision(f.object.agency_investment, decimal_format)
      br
      br
      = f.label t 'global.new_actions_investment'
      = f.text_field :new_stock_investment, {:class => "decimal validate[required]", :value => number_with_precision(f.object.new_stock_investment, decimal_format)}
      br
      br
      = f.label t 'global.ads_investment'
      = f.text_field :anno_investment, {:class => "decimal validate[required]", :value => number_with_precision(f.object.anno_investment, decimal_format)}
    .box.costes
      = t 'global.costs_title'
      br
      br
      = f.label t 'facebook.ctr_ads'
      = f.text_field :ctr_anno, {:class => "decimal validate[required]", :value => number_with_precision(f.object.ctr_anno, decimal_format)}
      br
      br
      = f.label t 'facebook.cpm_ads'
      = f.text_field :cpm_anno, {:class => "decimal validate[required]", :value => number_with_precision(f.object.cpm_anno, decimal_format)}
      br
      br
      = f.label t 'facebook.cpc_ads'
      = f.text_field :cpc_anno, {:class => "decimal validate[required]", :value => number_with_precision(f.object.cpc_anno, decimal_format)}
    = f.submit (t 'buttons.save_data'), {:class => "btn btn-success saveFacebook"}
    |     
    = link_to (t 'buttons.back'), facebook_index_path(params[:idc],1), :class => "btn btn-inverse backFacebook"
