- if !notice.nil?
    .alert.alert-success
      center
        h4
          = notice

- @facebook_info = InfoSocialNetwork.find(1)
- @socialNetwork = SocialNetwork.find(params[:id_social])
- @comments = FacebookComment.where(:social_network_id => @socialNetwork.id)[0]

.margin
  center
    h1
      = @socialNetwork.name
    a.btn.btn-primary.btn-small href=clients_social_networks_path(params[:idc]) data-toggle="modal" style="float:left;"
      i.icon-circle-arrow-left.icon-white
      |    
      = t 'buttons.back_social_network'
    a.btn.btn-primary.btn-small href="#report_social_network_modal" data-toggle="modal" style="float:right;margin-right: 30px;"
      = t 'buttons.report'
      |    
      i.icon-circle-arrow-down.icon-white
    br
    br
    img.content src="#{@socialNetwork.image.url}" height="#{CONFIG['images']['index']['h']}" width="#{CONFIG['images']['index']['w']}"
.margin
  a.btn.btn-primary href=facebook_new_path(params[:idc],2) style="width: 168px" id="btnNewData"
    = t 'buttons.new_data'
  br
  br
  button.btn.btn-primary onclick="show('formSelectRangeDate','btnMostrarRangos')" id="btnMostrarRangos" style="width: 190px"
    = t 'buttons.range_date'

.estiloRangoFechas id="formSelectRangeDate"
  button.close onclick="hide('formSelectRangeDate', 'btnMostrarRangos')" id="btnCloseRange"
    |x
  form action=facebook_index_path(params[:idc],2) method="get"
    center
      | Seleccione el rango de fechas
    br
    br
    = t 'global.start_date'
    .input-append.date data-date="01-01-2012" data-date-format="dd-mm-yyyy" id="start_date_picker"
      input.span2 type="text" name="start_date" value="01-01-2012" readonly="readonly"
      span.add-on
        i.icon-th
    br
    = t 'global.end_date'
    .input-append.date data-date="01-01-2012" data-date-format="dd-mm-yyyy" id="end_date_picker"
      input.span2 type="text" name="end_date" value="01-01-2012" readonly="readonly"
      span.add-on
        i.icon-th
    br
    center
      input.btn.btn-primary type="submit" value="#{t 'buttons.get_data'}"
    br

script 
  | createChart('container_fans', 'Comunidad', [#{@chart['dates']}]);
  | addSerie('Nuevos Fans', [#{@chart['new_fans']}]);
  | addSerie('Fans Totales', [#{@chart['total_fans']}]);
  | addSerie('Objetivo Fans', [#{@chart['goal_fans']}]);
  | refreshChart();

  | createChart('container_reach', 'Alcance', [#{@chart['dates']}]);
  | addSerie('# impresiones', [#{@chart['prints']}]);
  | addSerie('Alcance Total', [#{@chart['total_reach']}]);
  | addSerie('Alcance Potencial', [#{@chart['potential_reach']}]);
  | refreshChart();

  | createChart('container_interactivity', 'Interactividad', [#{@chart['dates']}]);
  | addSerie('# Interacciones', [#{@chart['total_interactions']}]);
  | addSerie('# clics Anuncios', [#{@chart['total_clicks_anno']}]);
  | addSerie('Interaccion Total Marca Plataforma', [#{@chart['brand_total_interactions']}]);
  | refreshChart();

  | createChart('container_investment_growth', 'Inversiones', [#{@chart['dates']}]);
  | addSerie('# Nuevos Fans', [#{@chart['new_fans']}]);
  | addSerie('Inversion total', [#{@chart['investment']}]);
  | refreshChart();

  | createChart('container_costs', 'Costes', [#{@chart['dates']}]);
  | addSerie('CTR Anuncios', [#{@chart['ctr_anno']}]);
  | addSerie('CPC anuncios', [#{@chart['cpc_anno']}]);
  | addSerie('Coste por iteracion', [#{@chart['coste_interactions']}]);
  | addSerie('CPM Anuncios',[#{@chart['cpm_anno']}]);
  | addSerie('CPM General',[#{@chart['cpm_general']}]);
  | addSerie('Coste por Fan',[#{@chart['coste_fan']}]);
  | refreshChart();

section.sectionInformation
  .estilo_tabs
    ul.nav.nav-tabs id="myTab"
      li.active
        a href="#tabtable" data-toggle="tab"
          | Tabla
      li
        a href="#tabcharts" data-toggle="tab"
          | Graficos
      li
        a href="#tabimagenes" data-toggle="tab"
          | Otros datos
  .tab-content
    .tab-pane.fade.in.active id="tabtable"
      section.sectionTable
        table.table.table-bordered id="tablaInformacion"
          thead
            tr.headerTable
              td.hideCell
              - @facebook_data.each do |facebook_datum|
                td
                  = facebook_datum.start_date.strftime('%d %b') + "-" + facebook_datum.end_date.strftime("%d %b")
          tbody
            tr.titlesRows
              td
                = t 'facebook.actions_title'
              - @facebook_data.each do |facebook_datum|
                td
                  = facebook_datum.actions
            tr
              td
                = t 'facebook.new_fans'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.new_fans, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.total_fans'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.total_fans, delimiter: units_delimiter)
            tr
              td
                = t 'global.percentage_growth'
              - @facebook_data.each do |facebook_datum|
                - valueGrowthPercent = number_with_precision(facebook_datum.get_percentage_difference_from_previous_total_fans, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
                - if valueGrowthPercent.to_f >= 0.0 
                  td.positiveValue
                    = %{#{valueGrowthPercent}%}
                - else
                  td.negativeValue
                    = %{#{valueGrowthPercent}%}
            tr
              td
                = t 'facebook.goal_fans'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.goal_fans, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.spain_ranking'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.ranking_espana, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.world_ranking'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.ranking_world, delimiter: units_delimiter)
            tr.titlesRows
              td colspan=100
                = t 'facebook.interactivity_title'
            tr
              td
                = t 'facebook.prints'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.prints, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.interactions'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.total_interactions, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.total_reach'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.total_reach, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.change_reach_percentage'
              - @facebook_data.each do | datum |
                - valueTotalReach = number_with_precision(datum.get_percentage_difference_from_previous_total_reach, delimiter: units_delimiter, separator: decimal_separator , precision: decimal_precision)
                - if valueTotalReach.to_f >= 0.0
                  td.positiveValue
                    =%{#{valueTotalReach}%}
                - else
                  td.negativeValue
                    = %{#{valueTotalReach}%}
            tr
              td
                = t 'facebook.potential_reach'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.potential_reach, delimiter: units_delimiter)
            tr.titlesRows
              td colspan=100
                = t 'facebook.interactivity_title'
            tr
              td
                = t 'facebook.ads_prints'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.total_prints_per_anno, separator: decimal_separator, delimiter: units_delimiter, precision: decimal_precision)
            tr
              td
                = t 'facebook.ads_clics'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.total_clicks_anno, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.fans_through_ads'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.fans_through_anno, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.total_interactions'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.brand_total_interactions, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.change_interactions_percentage'
              - @facebook_data.each do | datum |
                - valueChangeInteractions = number_with_precision(datum.get_percentage_difference_from_previous_total_interactions, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
                - if valueChangeInteractions.to_f >= 0.0
                  td.positiveValue
                    = %{#{valueChangeInteractions}%}
                - else
                  td.negativeValue
                    = %{#{valueChangeInteractions}%}
            tr
              td
                = t 'facebook.total_prints'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_delimiter(facebook_datum.total_prints, delimiter: units_delimiter)
            tr
              td
                = t 'facebook.change_prints_percentage'
              - @facebook_data.each do | datum |
                - valChangePrints = number_with_precision(datum.get_percentage_difference_from_previous_total_prints, delimiter: units_delimiter,  separator: decimal_separator, precision: decimal_precision)
                - if valChangePrints.to_f >= 0.0
                  td.positiveValue
                    = %{#{valChangePrints}%}
                - else
                  td.negativeValue
                    = %{#{valChangePrints}%}
            tr.titlesRows
              td colspan=100
                = t 'global.investment_title'
            tr
              td
                = t 'global.agency_investment'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.agency_investment, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'global.new_actions_investment'
              - @facebook_data.each do |facebook_datum|
                td
                  =  number_with_precision(facebook_datum.new_stock_investment, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'global.ads_investment'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.anno_investment, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'global.total_investment'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.total_investment, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr.titlesRows
              td colspan=100
                = t 'global.costs_title'
            tr
              td
                = t 'facebook.ctr_ads'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.ctr_anno, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'facebook.cpm_ads'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.cpm_anno, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'facebook.cpc_ads'
              - @facebook_data.each do |facebook_datum|
                td
                  = number_with_precision(facebook_datum.cpc_anno, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'facebook.cpm_general'
              - @facebook_data.each do | datum |
                td
                  = number_with_precision(datum.cpm_general, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'facebook.cost_per_interaction'
              - @facebook_data.each do | datum |
                td
                  = number_with_precision(datum.coste_interactions, delimiter: units_delimiter, separator: decimal_separator, precision: decimal_precision)
            tr
              td
                = t 'facebook.cost_per_fan'
              - @facebook_data.each do | datum |
                td
                  = number_with_precision(datum.fan_cost, delimiter: units_delimiter, separator: decimal_separator, precision: 3)
            tr id="buttons"
              td.nilValue
                = t 'global.options'
              -@facebook_data.each do |facebook_datum|
                td.celdaOpciones
                  a.btn.btn-info href=facebook_edit_path(facebook_datum.id,params[:idc]) id=%{edit_#{facebook_datum.id}}
                    i.icon-pencil.icon-white
                  |  
                  a.btn.btn-danger data-method='delete' rel='nofollow' id=%{delete_#{facebook_datum.id}} href=facebook_datum_path(facebook_datum.id) data-confirm="Esta seguro que desea eliminar estos datos?"
                    i.icon-trash.icon-white
      .comment
        .title
          h4
            | Comentario para la Tabla:
        form id="table" onsubmit="return saveChartComment('#table',#{@socialNetwork.id},'table', '#{params[:locale]}', '#{@facebook_info.id_name}');"
          textarea id="comment"
            = @comments.table
          br
          .counter
          button.btn.btn-success
            = t 'buttons.save'
          .result

    .tab-pane.fade id="tabcharts"  
      section.sectionGraphics id="seccionGraficos"
        center
          h2 Graficos de la Tabla
        .estilo_graficos
          #container_fans
        .comment
          .title
            h4
              | Comentario Grafico Fans
          form  id="fans" onsubmit="return saveChartComment('#fans',#{@socialNetwork.id},'fans', '#{params[:locale]}', '#{@facebook_info.id_name}');"
            textarea rows=10 id="comment"
              = @comments.fans
            br
            .counter
            button.btn.btn-success
              | Guardar
            .result
        .estilo_graficos
          #container_interactivity
        .comment
          .title
            h4
              | Comentario Grafico Interactividad
          form id="interaction" onsubmit="return saveChartComment('#interaction',#{@socialNetwork.id},'interaction', '#{params[:locale]}', '#{@facebook_info.id_name}');"
            textarea rows=10 id="comment"
              = @comments.interaction
            br
            .counter
            button.btn.btn-success
              | Guardar
            .result
        .estilo_graficos
          #container_reach
        .comment
          .title
            h4
              | Comentario Grafico Alcance
          form  id="reach" onsubmit="return saveChartComment('#reach',#{@socialNetwork.id},'reach', '#{params[:locale]}', '#{@facebook_info.id_name}');"
            textarea rows=10 id="comment"
              = @comments.reach
            br
            .counter
            button.btn.btn-success
              | Guardar
            .result
        .estilo_graficos
          #container_investment_growth
        .comment
          .title
            h4
              | Comentario Grafico Crecimiento Inversion
          form id="investment" onsubmit="return saveChartComment('#investment',#{@socialNetwork.id},'investment', '#{params[:locale]}', '#{@facebook_info.id_name}');"
            textarea rows=10 id="comment"
              = @comments.investment
            br
            .counter
            button.btn.btn-success
              | Guardar
            .result
        .estilo_graficos
          #container_costs
        .comment
          .title
            h4
              | Comentario Grafico Costes
          form id="costs" onsubmit="return saveChartComment('#costs',#{@socialNetwork.id},'cost', '#{params[:locale]}', '#{@facebook_info.id_name}');"
            textarea rows=10 id="comment"
              = @comments.cost
            br
            .counter
            button.btn.btn-success
              | Guardar
            .result
    .tab-pane.fade id="tabimagenes"
      == render 'layouts/uploadImage'
script
  | limit_characters_textarea_for_form('#table');
  | limit_characters_textarea_for_form('#fans');
  | limit_characters_textarea_for_form('#interaction');
  | limit_characters_textarea_for_form('#reach');
  | limit_characters_textarea_for_form('#investment');
  | limit_characters_textarea_for_form('#costs');
