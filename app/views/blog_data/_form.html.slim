= form_for @blog_datum, :html => {:class => "formNuevoDatosBlog", :id => "formEntradaDatos"} do |f|
  - if @blog_datum.errors.any?
    #error_explanation
      h2 = "#{pluralize(@blog_datum.errors.count, "error")} prohibited this blog_datum from being saved:"
      ul
        - @blog_datum.errors.full_messages.each do |message|
          li = message

  .form-horizontal.sectionInformation style="height: 650px;"
    .box.informationBlog
      = t 'global.information'
      br
      br
      = f.hidden_field :client_id, :value => params[:idc]
      = f.hidden_field :social_network_id, :value => params[:id_social]
      - !@blog_datum.start_date.nil? ? start_date = @blog_datum.start_date.strftime("%d-%m-%Y") : start_date = get_start_date 
      = f.label t 'global.start_date' 
      .input-append.date data-date=start_date data-date-format="dd-mm-yyyy" id="start_date_picker"
        = f.text_field :start_date, :class => "span2", :value => start_date, :readonly => true
        span.add-on
          i.icon-th
      br
      br
      - !@blog_datum.end_date.nil? ? end_date = @blog_datum.end_date.strftime("%d-%m-%Y") : end_date = get_end_date 
      = f.label t 'global.end_date' 
      .input-append.date data-date=end_date data-date-format="dd-mm-yyyy" id="end_date_picker"
        = f.text_field :end_date, :class => "span2", :value => end_date, :readonly => true
        span.add-on
          i.icon-th

    .box.visitsBlog
      = t 'blog.title_visits'
      br
      br
      = f.label t 'blog.unique_visits'
      = f.text_field :unique_visits, {:class => "number validate[required]", :value => number_with_delimiter(f.object.unique_visits, integer_format)}
      br
      br
      = f.label t 'blog.view_pages'
      = f.text_field :view_pages, {:class => "number validate[required]", :value => number_with_delimiter(f.object.view_pages, integer_format)}
    .box.percentageBlog
      = t 'blog.title_percentage'
      br
      br
      = f.label t 'blog.rebound_percentage'
      = f.text_field :rebound_percent, {:class => "decimal validate[required]", :value => number_with_precision(f.object.rebound_percent, decimal_format)}
      br
      br
      = f.label t 'blog.new_visits_percentage'
      = f.text_field :new_visits_percent, {:class => "decimal validate[required]", :value => number_with_precision(f.object.new_visits_percent, decimal_format)}
      br
      br
      = f.label t 'blog.num_posts'
      = f.text_field :total_posts, {:class => "number validate[required]", :value => number_with_delimiter(f.object.total_posts, integer_format)}
    br
    br
    = f.submit (t 'buttons.save_data'), {:class => "btn btn-success saveBlog"}
    |     
    = link_to (t 'buttons.back'), blog_index_path(params[:idc],1), :class => "btn btn-inverse backBlog"
