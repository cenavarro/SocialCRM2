= form_for @twitter_datum, :html => {:class => "formNuevoDatoTwitter", :id => "formEntradaDatos"} do |f|
  - if @twitter_datum.errors.any?
    #error_explanation
      h2 = "#{pluralize(@twitter_datum.errors.count, "error")} prohibited this twitter_datum from being saved:"
      ul
        - @twitter_datum.errors.full_messages.each do |message|
          li = message
  .form-horizontal.sectionInformation style="height: 950px;"
    .box.informationTwitter
      = t 'global.information'
      br
      br
      = f.hidden_field :client_id, :value => params[:idc]
      = f.hidden_field :social_network_id, :value => params[:id_social]
      - !@twitter_datum.start_date.nil? ? start_date = @twitter_datum.start_date.strftime("%d-%m-%Y") : start_date = get_start_date
      = f.label t 'global.start_date' 
      .input-append.date data-date=start_date data-date-format="dd-mm-yyyy" id="start_date_picker"
        = f.text_field :start_date, :class => "span2", :value => start_date, :readonly => true
        span.add-on
          i.icon-th
      br
      br
      - !@twitter_datum.end_date.nil? ? end_date = @twitter_datum.end_date.strftime("%d-%m-%Y") : end_date = get_end_date
      = f.label t 'global.end_date' 
      .input-append.date data-date=end_date data-date-format="dd-mm-yyyy" id="end_date_picker"
        = f.text_field :end_date, :class => "span2", :value => end_date, :readonly => true
        span.add-on
          i.icon-th
    .box.comunityTwitter
      = t 'twitter.community_title'
      br
      br
      = f.label t 'twitter.followers'
      = f.text_field :total_followers, {:class => "number validate[required]", :value => number_with_delimiter(f.object.total_followers, integer_format)}
      br
      br
      = f.label t 'twitter.goal_followers'
      = f.text_field :goal_followers, {:class => "number validate[required]", :value => number_with_delimiter(f.object.goal_followers, integer_format)}
      br
      br
      = f.label t 'twitter.total_tweets'
      = f.text_field :total_tweets, {:class => "number validate[required]", :value => number_with_delimiter(f.object.total_tweets, integer_format)}
    .box.interactionTwitter
      = t 'global.interactivity_title' 
      br
      br
      = f.label t 'twitter.mentions'
      = f.text_field :total_mentions, {:class => "number validate[required]", :value => number_with_delimiter(f.object.total_mentions, integer_format)}
      br
      br
      = f.label t 'twitter.retweets'
      = f.text_field :ret_tweets, {:class => "number validate[required]", :value => number_with_delimiter(f.object.ret_tweets, integer_format)}
      br
      br
      = f.label t 'twitter.favorites'
      = f.text_field :favorites, {:class => "number validate[required]", :value => number_with_delimiter(f.object.favorites, integer_format)}
      br
      br
      = f.label t 'twitter.lists'
      = f.text_field :lists, {:class => "number validate[required]", :value => number_with_delimiter(f.object.lists, integer_format)}
      br
      br
      = f.label t 'twitter.link_clics'
      = f.text_field :total_clicks, {:class => "number validate[required]", :value => number_with_delimiter(f.object.total_clicks, integer_format)}
      br
      br
      = f.label t 'twitter.interactions_twitter_ads'
      = f.text_field :interactions_ads, {:class => "number validate[required]", :value => number_with_delimiter(f.object.interactions_ads, integer_format)}
      br
      br
      = f.label t 'twitter.prints_tweetreach'
      = f.text_field :prints, {:class => "number validate[required]", :value => number_with_delimiter(f.object.prints, integer_format)}
      br
      br
      = f.label t 'twitter.prints_twitter_ads'
      = f.text_field :prints_ads, {:class => "number validate[required]", :value => number_with_delimiter(f.object.prints_ads, integer_format)}
    .box.investmentTwitter
      = t 'global.investment_title' 
      br
      br
      = f.label t 'global.agency_investment'
      = f.text_field :agency_investment, {:class => "decimal validate[required]", :value => number_with_precision(f.object.agency_investment, decimal_format)}
      br
      br
      = f.label t 'global.new_actions_investment'
      = f.text_field :investment_actions, {:class => "decimal validate[required]", :value =>  number_with_precision(f.object.investment_actions, decimal_format)}
      br
      br
      = f.label t 'twitter.twitter_ads_investment'
      = f.text_field :investment_ads, { :class => "decimal validate[required]", :value =>  number_with_precision(f.object.investment_ads, decimal_format)}
      br
      br
      = f.label t 'twitter.cost_per_engagement'
      = f.text_field :cost_twitter_ads, {:class => "decimal validate[required]", :value =>  number_with_precision(f.object.cost_twitter_ads, decimal_format)}
    br
    br
    = f.submit (t 'buttons.save_data'), {:class => "btn btn-success saveTwitter" }
    |     
    = link_to (t 'buttons.back'), twitter_index_path(params[:idc], 1, params[:id_social]), :class => "btn btn-inverse backTwitter"
